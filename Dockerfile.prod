# Dockerfile.prod
FROM node:18-alpine AS prod-base

# Install system dependencies
RUN apk add --no-cache libc6-compat openssl

WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci 

# Build stage
FROM prod-base AS builder
ENV NODE_ENV=production

# Copy project files
COPY . .

# Generate Prisma client and ensure SSL certificates are handled
RUN npx prisma generate

# Verify SSL certificates if needed
RUN if [ -f "./certs/custom-ca.pem" ]; then \
    export NODE_EXTRA_CA_CERTS=/app/certs/custom-ca.pem; \
    fi

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production
WORKDIR /app

# Set production environment
ENV NODE_ENV=production

# Install system dependencies for SSL
RUN apk add --no-cache libc6-compat openssl ca-certificates

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy necessary files
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/prisma ./prisma

# Optional: Copy custom CA certificates if needed
# COPY ./certs/custom-ca.pem /etc/ssl/certs/custom-ca.pem

# Set user permissions
USER nextjs

# Expose port
EXPOSE 3000

# Start the application
CMD ["node", "server.js"]